{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"dotenv\"","webpack:///external \"axios\"","webpack:///./util/Time.js","webpack:///external \"telegraf/telegram\"","webpack:///external \"airtable-plus\"","webpack:///./src/index.ts","webpack:///./src/app.ts","webpack:///external \"express\"","webpack:///external \"ddos\"","webpack:///external \"multer\"","webpack:///external \"body-parser\"","webpack:///./util/MailGun.js","webpack:///external \"crypto\"","webpack:///./src/bot.js","webpack:///external \"telegraf\"","webpack:///external \"memory-cache\"","webpack:///./util/cloudflare.js","webpack:///./util/weather.js","webpack:///./util/joke.js","webpack:///./util/eat.js","webpack:///./util/space.js","webpack:///./util/Airtable.js","webpack:///./util/promptpayQR.js","webpack:///external \"qrcode\"","webpack:///external \"promptpay-qr\"","webpack:///external \"imgur\"","webpack:///./util/checkDown.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","convertTime","str","Date","toLocaleDateString","dateStyle","timeZone","timeStyle","hour12","weekday","year","month","day","hour","minute","second","timeZoneName","getTime","today","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getISOTime","date","now","pastDate","toISOString","since","app_1","port","process","env","PORT","app","listen","console","log","__importDefault","this","mod","express_1","Ddos","multer","bodyParser","MailGunWebHookHandler","bot","telegram","config","default","ddos","burst","limit","checkinterval","errormessage","use","express","req","res","send","sucess","urlencoded","extended","post","any","message","chatID","sendMessage","end","webhookCallback","crypto","body","timestamp","token","createHmac","MAILGUN_API_KEY","update","digest","signature","recipient","includes","sender","subject","axios","telegraf","Telegram","cache","getAnalysis","getCurrentWeather","getPollution","getDevJoke","getJoke","getKnockJoke","randomRes","randomDrink","spacer","airtable","getPromptPayQR","BOT_TOKEN","start","async","ctx","from","id","undefined","last_name","first_name","findUser","length","addUser","err","reply","hears","data","ENDPOINT","cpu","total","mem","percent","uptime","command","setTimeout","setup","punchline","rester","put","word","exec","text","request","setPromptPayID","user","getPromptPayID","qr","fields","PromptPay","replyWithPhoto","on","setWebhook","URL","headers","CFTOKEN","time","url","CFZONEID","sslPercentage","Math","round","result","totals","requests","ssl","encrypted","all","until","uniques","threats","response","errors","WEATHER_API_KEY","currently","temperature","apparentTemperature","num","humidity","precipProbability","uvIndex","summary","Message","AIR_VISUAL_API_KEY","pollution","current","status","aqius","ts","AirtablePlus","baseID","apiKey","AIRTABLE_API_KEY","read","tableName","floor","random","Name","removeTrailingSpace","slice","sentence","split","forEach","char","isThaiVowels","users","filterByFormula","maxRecords","username","ChatID","toString","promptPayID","updateWhere","qrcode","generatePayload","imgur","amount","payload","options","type","color","dark","light","toDataURL","generatePromptPayQR","parseFloat","uploadBase64","link","isUp","getInitState","setInterval"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = require(\"dotenv\");","module.exports = require(\"axios\");","function convertTime(str) {\n    //const data = (\\d{4})-(\\d{2}-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})).exec()\n    const date = new Date(str)\n    const time = date.toLocaleDateString('en-US-u-ca-gregory', {\n        dateStyle: 'medium',\n        timeZone: 'Asia/Bangkok',\n        timeStyle: 'medium',\n        hour12: false,\n        weekday: 'short', \n        year: 'numeric', \n        month: 'short', \n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        timeZoneName: 'short'\n    })\n    return time\n}\n\nfunction getTime(){\n    const today = new Date();\n    const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n    const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    const dateTime = date+' '+time;\n    return convertTime(dateTime)\n}\n\nfunction getISOTime(hour){\n    const date = new Date(Date.now())\n    const pastDate = new Date(Date.now() - hour*60*60*1000)\n    return {\n        now: date.toISOString(),\n        since: pastDate.toISOString()\n    }\n}\n\nmodule.exports = {\n    convertTime,\n    getTime,\n    getISOTime\n}\n","module.exports = require(\"telegraf/telegram\");","module.exports = require(\"airtable-plus\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst app_1 = require(\"./app\");\nconst port = process.env.PORT || 3050;\napp_1.app.listen(port, () => console.log(`Running on ${port}`));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.app = void 0;\nconst express_1 = __importDefault(require(\"express\"));\nconst axios = require('axios');\nconst Ddos = require('ddos');\nconst multer = require('multer');\nconst bodyParser = require('body-parser');\nconst Telegram = require('telegraf/telegram');\nconst MailGunWebHookHandler = require('../util/MailGun');\nconst { bot, telegram } = require('./bot');\nconst port = process.env.PORT || 3000;\nrequire('dotenv').config();\nexports.app = express_1.default();\nconst ddos = new Ddos({\n    burst: 10,\n    limit: 30,\n    checkinterval: 3,\n    errormessage: 'Slow down bro. Too many request'\n});\nexports.app.use(ddos.express);\nexports.app.get('/', (req, res) => {\n    res.send({ sucess: true });\n});\nexports.app.use(bodyParser.urlencoded({ extended: false }));\nexports.app.post('/mail', multer().any(), (req, res) => {\n    const { message, chatID } = MailGunWebHookHandler(req, res);\n    telegram.sendMessage(chatID, message);\n    res.end();\n});\nexports.app.get('/test', (req, res) => {\n    res.send('hello');\n});\nexports.app.post('/telegraf', bot.webhookCallback('/telegraf'));\n","module.exports = require(\"express\");","module.exports = require(\"ddos\");","module.exports = require(\"multer\");","module.exports = require(\"body-parser\");","const crypto = require('crypto')\nrequire('dotenv').config()\n\nfunction MailGunWebHookHandler(req,res) {\n    const value = req.body.timestamp+req.body.token;\n    const hash = crypto.createHmac('sha256',\n              process.env.MAILGUN_API_KEY)\n                   .update(value)\n                   .digest('hex');\n    if (hash !== req.body.signature) {\n        return `Invalid signature webhook signature`\n    }\n    let chatID;\n    if(req.body.recipient.includes(\"thanaphon\")) chatID = 877836201\n    else if(req.body.recipient.includes(\"sethanant\")) chatID = 834716830\n    else chatID = -320729079\n    const message = `📩 New Email\\nSender: ${req.body.sender} \\nRecipient: ${req.body.recipient}\\nSubject: ${req.body.subject}`\n    return {message, chatID}\n}\n\nmodule.exports = MailGunWebHookHandler;\n\n","module.exports = require(\"crypto\");","const axios = require('axios')\nconst telegraf = require('telegraf')\nconst Telegram = require('telegraf/telegram')\nconst cache = require('memory-cache')\n\nconst { convertTime, getTime } = require('../util/Time')\nconst { getAnalysis } = require('../util/cloudflare')\nconst { getCurrentWeather, getPollution } = require('../util/weather')\nconst { getDevJoke, getJoke, getKnockJoke } = require('../util/joke')\nconst { randomRes, randomDrink } = require('../util/eat')\nconst spacer = require('../util/space')\nconst airtable = require('../util/Airtable')\nconst getPromptPayQR = require('../util/promptpayQR')\nrequire('dotenv').config()\nrequire('../util/checkDown')\n\nconst bot = new telegraf(process.env.BOT_TOKEN)\nconst telegram = new Telegram(process.env.BOT_TOKEN)\n\nbot.start(async ctx => {\n\tlet message = `Welcome! use /status to get status of the server`\n\tconst chatID = ctx.update.message.from.id\n\n\tlet name\n\tif (ctx.update.message.from.last_name == undefined) name = ctx.update.message.from.first_name\n\telse name = ctx.update.message.from.first_name + ctx.update.message.from.last_name\n\n\tconst users = await airtable.findUser(chatID) //See if user is already in db\n\tif (users.length == 0) {\n\t\ttry {\n\t\t\tawait airtable.addUser(name, chatID)\n\t\t\tmessage = `Welcome! start using now. User \"/setqr #yourPromptPayID\" to setup generating PromptPayQR feature.`\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\tmessage = `There is an error. Try again please`\n\t\t}\n\t}\n\tctx.reply(message)\n})\n\n////////Command Zone/////////\n\nbot.hears('/status', async ctx => {\n\tlet reply\n\ttry {\n\t\tconst { data } = await axios.get(`${process.env.ENDPOINT}:61208/api/3/all`)\n\t\tconst time = convertTime(data.now)\n\t\treply = `Time: ${time}\\nServer status: ✅\\nCPU Usage: ${data.cpu.total}%\\nMemory Usage: ${data.mem.percent}%\\nUptime: ${data.uptime}`\n\t} catch {\n\t\tconst time = getTime()\n\t\treply = `Time: ${time}\\nServer status: 🚨\\nFailed to get the status`\n\t}\n\n\tctx.reply(reply)\n})\n\nbot.command('analysis', async ctx => {\n\tconst reply = await getAnalysis(24)\n\tctx.reply(reply)\n})\n\nbot.command('weather', async ctx => {\n\tconst reply = await getCurrentWeather()\n\tctx.reply(reply)\n})\n\nbot.command('pollution', async ctx => {\n\tconst reply = await getPollution()\n\tctx.reply(reply)\n})\n\nbot.command('devjoke', async ctx => {\n\tconst reply = await getDevJoke()\n\tctx.reply(`Get ready for it`)\n\tawait setTimeout(() => {\n\t\tctx.reply(reply.setup)\n\t}, 2000)\n\tawait setTimeout(() => {\n\t\tctx.reply(reply.punchline)\n\t}, 5000)\n})\n\nbot.command('joke', async ctx => {\n\tconst reply = await getJoke()\n\tctx.reply(`Here it goes~`)\n\tawait setTimeout(() => {\n\t\tctx.reply(reply.setup)\n\t}, 2000)\n\tawait setTimeout(() => {\n\t\tctx.reply(reply.punchline)\n\t}, 5000)\n})\n\nbot.command('knockjoke', async ctx => {\n\tconst reply = await getKnockJoke()\n\tctx.reply(`*At the door*`)\n\tawait setTimeout(() => {\n\t\tctx.reply(reply.setup)\n\t}, 2000)\n\tawait setTimeout(() => {\n\t\tctx.reply(reply.punchline)\n\t}, 5000)\n})\n\nbot.command('eat', async ctx => {\n\tconst rester = await randomRes()\n\tcache.put('count', 1)\n\tctx.reply(rester)\n})\n\nbot.command('drink', async ctx => {\n\tconst rester = await randomDrink()\n\tconsole.log(cache.get('count'))\n\tctx.reply(rester)\n})\n\nbot.hears(/(\\/space)\\s(.*)/, ctx => {\n\tconst word = /(\\/space)\\s(.*)/.exec(ctx.update.message.text)\n\tif (word[2]) {\n\t\tctx.reply(spacer(word[2]))\n\t} else {\n\t\tctx.reply('Something went wrong')\n\t}\n})\n\nbot.hears(/(\\/setqr)( {0,1})(\\d{10,})/, async ctx => {\n\tconst request = /(setqr)( {0,1})(\\d{10,})/.exec(ctx.update.message.text)\n\ttry {\n\t\tawait airtable.setPromptPayID(ctx.update.message.from.id, request[3])\n\t\tctx.reply(`Your PromptPayQR is set to ${request[3]}`)\n\t} catch (err) {\n\t\tctx.reply(err)\n\t}\n})\n\nbot.hears(/([Qq][Rr])(.*)/, async ctx => {\n\tconst request = /([Qq][Rr])(.*)/.exec(ctx.update.message.text)\n\tconst user = await airtable.getPromptPayID(ctx.update.message.from.id)\n\tconst qr = await getPromptPayQR(user[0].fields.PromptPay, request[2])\n\tctx.replyWithPhoto(qr)\n})\n\nbot.on('text', ctx => {\n\tconst message = ctx.update.message.text\n\tctx.reply('HELLO')\n})\n\n////////Server Zone/////////\n\nbot.telegram.setWebhook(`${process.env.URL}/telegraf`)\n\nmodule.exports = {\n\tbot,\n\ttelegram\n}\n","module.exports = require(\"telegraf\");","module.exports = require(\"memory-cache\");","const axios = require('axios')\nconst { convertTime, getTime, getISOTime } = require('./Time')\nrequire('dotenv').config()\n\nconst config = {\n    headers: {'Authorization': \"Bearer \" + process.env.CFTOKEN}\n}\n\nasync function getAnalysis(hour) {\n    const time = getISOTime(hour)\n    const url = `https://api.cloudflare.com/client/v4/zones/${process.env.CFZONEID}/analytics/dashboard?since=${time.since}&until=${time.now}&continuous=true`\n    try{\n        const {data} = await axios.get(url, config)\n        const sslPercentage = Math.round(data.result.totals.requests.ssl.encrypted/data.result.totals.requests.all*100)\n        const reply = `Since: ${convertTime(data.result.totals.since)}\\nUntil: ${convertTime(data.result.totals.until)}\\n👋 Total Request: ${data.result.totals.requests.all}\\n👨🏼‍💻 Uniques: ${data.result.totals.uniques.all}\\n🔒 SSL: ${sslPercentage}%\\n😈 Threats: ${data.result.totals.threats.all}`\n        return reply\n    }\n    catch(err){\n        return err.response.data.errors[0].message\n    }\n    \n}\n\nmodule.exports = {\n    getAnalysis\n}","const axios = require('axios')\nconst { convertTime, getTime } = require('./Time')\nrequire('dotenv').config()\n\nfunction roundToTwo(num) {    \n    return +(Math.round(num + \"e+2\")  + \"e-2\");\n}\n\nasync function getCurrentWeather(){\n    const lat = 13.63\n    const long = 100.51\n    const url = `https://api.darksky.net/forecast/${process.env.WEATHER_API_KEY}/${lat},${long}?units=si`\n    try{\n        const {data} = await axios.get(url)\n        const currently = data.currently;\n        return `Time: ${getTime()}\\n🌡 Temperature: ${currently.temperature}℃\\n🤒 Feel likes: ${currently.apparentTemperature}℃\\n💦 Humidity: ${roundToTwo(currently.humidity*100)}%\\n🌧 Precipitation: ${currently.precipProbability*100}%\\n🌞 UV Index: ${currently.uvIndex}\\n⛅️ Summary: ${currently.summary}`\n    }\n    catch(err){\n        return `🙀 Failed to get weather data. ${err.response.data.Message}`\n    }\n    \n}\n\n\nasync function getPollution() {\n    const url = `http://api.airvisual.com/v2/nearest_city?lat=13.650234&lon=100.496855&key=${process.env.AIR_VISUAL_API_KEY}`\n    try{\n        const {data} = await axios.get(url)\n        const pollution = data.data.current.pollution\n        let status\n        if(pollution.aqius>=301) status = '☠️Hazardous☠️'\n        else if(pollution.aqius>=201) status = 'Very Unhealthy 🤮'\n        else if(pollution.aqius>=151) status = 'Unhealthy 😷'\n        else if(pollution.aqius>=101) status = 'Unhealthy for Sensitive Groups 🤧'\n        else if(pollution.aqius>=51) status = 'Moderate 😑'\n        else if(pollution.aqius>=0) status = 'Good ☺️'\n        return `Time: ${convertTime(pollution.ts)}\\n💨 AQI: ${pollution.aqius} -> ${status}`\n    }\n    catch(err){\n        return `💥 Failed to get pollution data. ${err.response.data.data.message}`\n    }\n}\n\nmodule.exports = {\n    getCurrentWeather,\n    getPollution\n}","const axios = require('axios')\n\nasync function getDevJoke(){\n    const {data} = await axios.get(`https://official-joke-api.appspot.com/jokes/programming/random`)\n    return {\n        setup: data[0].setup, \n        punchline: data[0].punchline\n    }\n}\n\nasync function getJoke() {\n    const {data} = await axios.get(`https://official-joke-api.appspot.com/jokes/random`)\n    return {\n        setup: data.setup, \n        punchline: data.punchline\n    }\n}\n\nasync function getKnockJoke() {\n    const {data} = await axios.get(`https://official-joke-api.appspot.com/jokes/knock-knock/random`)\n    return {\n        setup: data[0].setup, \n        punchline: data[0].punchline\n    }\n}\n\nmodule.exports = {\n    getDevJoke,\n    getJoke,\n    getKnockJoke\n}\n","const AirtablePlus = require('airtable-plus')\nrequire('dotenv').config()\n\nconst airtable = new AirtablePlus({\n\tbaseID: 'appwXCisvWItAb0cj',\n\tapiKey: process.env.AIRTABLE_API_KEY\n})\n\nasync function randomRes() {\n\ttry {\n\t\tconst res = await airtable.read(\n\t\t\t{},\n\t\t\t{\n\t\t\t\ttableName: 'KMUTT_Restaurants'\n\t\t\t}\n\t\t)\n\t\tconst index = Math.floor(Math.random() * res.length)\n\t\treturn res[index].fields.Name\n\t} catch (err) {\n\t\tconsole.log(err)\n\t\treturn err\n\t}\n}\n\nasync function randomDrink() {\n\ttry {\n\t\tconst res = await airtable.read(\n\t\t\t{},\n\t\t\t{\n\t\t\t\ttableName: 'KMUTT_Drink'\n\t\t\t}\n\t\t)\n\t\tconst index = Math.floor(Math.random() * res.length)\n\t\treturn res[index].fields.Name\n\t} catch (err) {\n\t\tconsole.log(err)\n\t\treturn err\n\t}\n}\n\nmodule.exports = {\n\trandomRes,\n\trandomDrink\n}\n","function isThaiVowels(char) {\n\tconst vowels = ['่', '้', '๊', '๋', 'ิ', 'ี', 'ึ', 'ื', '็', 'ั', 'ุ', 'ู', '์', 'ํ']\n\n\tif (vowels.includes(char)) {\n\t\treturn true\n\t}\n\treturn false\n}\n\nfunction removeTrailingSpace(text) {\n\tif (text[text.length - 1] === ' ') {\n\t\treturn text.slice(0, -1)\n\t}\n\n\treturn text\n}\n\nfunction spacer(sentence) {\n\tlet result = ''\n\n\tsentence.split('').forEach(char => {\n\t\tif (char === ' ') {\n\t\t\treturn\n\t\t}\n\n\t\tif (isThaiVowels(char)) {\n\t\t\tresult = removeTrailingSpace(result)\n\n\t\t\tresult += char + ' '\n\t\t\treturn\n\t\t}\n\n\t\tif (char === 'ำ') {\n\t\t\tresult = removeTrailingSpace(result)\n\n\t\t\tresult += 'ํ า '\n\t\t\treturn\n\t\t}\n\n\t\tresult += char + ' '\n\t})\n\n\tresult = removeTrailingSpace(result)\n\n\treturn result\n}\n\nmodule.exports = spacer\n","const AirtablePlus = require('airtable-plus');\nrequire('dotenv').config()\n\nconst airtable = new AirtablePlus({\n    baseID: 'appYvqSHFL5G5lRaC',\n    apiKey: process.env.AIRTABLE_API_KEY,\n    tableName: 'User_List',\n});\n\nasync function findUser(chatID) {\n    let users\n    try{\n        users = await airtable.read({\n            filterByFormula: `ChatID = \"${chatID}\"`,\n            maxRecords: 20, // optional\n        })\n    }\n    catch(err){\n        console.log(err)\n        return err\n    }\n    return users\n}\n\n\nasync function addUser(username, chatID) {\n    try{\n        await airtable.create({\n            Name: username,\n            ChatID: chatID.toString()\n        })\n    }\n    catch(err){\n        console.log(err);\n        throw err\n    }\n}\n\n\n// async function updateUser(chatID, ) {\n    \n// }\n\nasync function setPromptPayID(chatID, promptPayID) {\n    try{\n        await airtable.updateWhere( \n            `ChatID = \"${chatID}\"`,\n            { PromptPay: promptPayID }\n        )\n    }\n    catch(err){\n        return err\n    }\n}\n\nasync function getPromptPayID(chatID) {\n    try{\n        const user = await airtable.read({\n            filterByFormula: `ChatID = \"${chatID}\"`,\n            maxRecords: 1\n        })\n        return user\n    }\n    catch(err){\n        return err\n    }\n}\n\n\nmodule.exports = {\n    findUser,\n    addUser,\n    setPromptPayID,\n    getPromptPayID\n}","const qrcode = require('qrcode')\nconst generatePayload = require('promptpay-qr')\nconst imgur = require('imgur')\n\nasync function generatePromptPayQR (promptPayID, amount) {\n    const payload = generatePayload(promptPayID, { amount })\n    const options = { type: 'png', color: { dark: '#003b6a', light: '#f7f8f7' } }\n\n    try{\n        const png = await qrcode.toDataURL(payload, options)\n        return png\n    }\n    catch(err){\n        return err\n    }\n\n}\n\nasync function getPromptPayQR(promptPayID, amount){\n    try{\n        const png = await generatePromptPayQR(promptPayID, parseFloat(amount))\n        let payload = png.split(',')\n        const url = await imgur.uploadBase64(payload[1])\n        return url.data.link\n    }\n    catch(err){\n        return err.message\n    }\n}\n\n\n\n\nmodule.exports = getPromptPayQR;","module.exports = require(\"qrcode\");","module.exports = require(\"promptpay-qr\");","module.exports = require(\"imgur\");","const axios = require('axios')\nconst Telegram = require('telegraf/telegram')\nconst { convertTime, getTime } = require('./Time')\n\nrequire('dotenv').config()\nconst telegram = new Telegram(process.env.BOT_TOKEN)\n\nlet isUp\n\nasync function getInitState() {\n\ttry {\n\t\tconst data = await axios(`${process.env.ENDPOINT}:61208/api/3/uptime`)\n\t\tif (data.status === 200) isUp = `✅`\n\t\telse if (data.status != 200) isUp = `⛔️`\n\t} catch {\n\t\tisUp = false\n\t}\n\n\t// console.log(`Init complete, Server is up: ${isUp}`)\n\t// telegram.sendMessage(834716830, `Init status complete, Server up: ${isUp}`);\n}\n\ngetInitState()\n\nsetInterval(async () => {\n\tlet message\n\ttry {\n\t\tconst data = await axios(`${process.env.ENDPOINT}:61208/api/3/uptime`)\n\t\tif (data.status === 200 && isUp == false) {\n\t\t\tisUp = true\n\t\t\tmessage = `Server is back to ONLINE! ✈️🚴🏼‍♀🤴👑`\n\t\t} else if (data.status != 200 && isUp == false) {\n\t\t\tisUp = false\n\t\t\tmessage = `There is a problem. Not getting 200 😑`\n\t\t}\n\t} catch {\n\t\tif (isUp == true) {\n\t\t\tisUp = false\n\t\t\tmessage = `Server is DOWN! 🚨💀`\n\t\t}\n\t}\n\tif (message != undefined) {\n\t\ttelegram.sendMessage(834716830, `At ${getTime()}\\n` + message)\n\t}\n}, 10000)\n"],"sourceRoot":""}